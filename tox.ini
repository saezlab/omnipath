[flake8]
# D104 Missing docstring in public package
# F401 ... imported but unused
per-file-ignores =
    */__init__.py: D104, F401,
    tests/* : D101, D102, D103, D104
    tests/conftest.py: D101, D102, D103, E402
# D100 Missing docstring in public module
# D107 Missing docstring in __init__
# W503 line break before binary operator
# D105 Missing docstring in magic method
# E203 whitespace before ':'
# D400 First line should end with a period
# false positive:
# B024 ... is an abstract base class, but it has no abstract methods
ignore = D100,D107,W503,D105,E203,D400,B024
exclude =
    .git,
    __pycache__,
    docs/*
max_line_length = 120
filename = *.py

[gh]
python =
    3.9: 3.9
    3.10: 3.10
    3.11: 3.11
    3.12: 3.12
    3.13: 3.13, covclean, lint, coverage, readme

[pytest]
python_files = test_*.py
testpaths = tests/
xfail_strict = true
requests_mock_case_sensitive = true

[tox]
min_version=3.20.0
isolated_build = true
skip_missing_interpreters = true
envlist =
    covclean
    lint
    {3.9,3.10,3.11,3.12,3.13}-{linux,macos}
    coverage
    readme
    docs

[testenv]
platform =
    linux: linux
    macos: (macos|osx|darwin)
deps =
    pytest
    pytest-mock
    pytest-cov
    pytest-socket
    requests-mock>=1.9.2
    numpy
    networkx
#    {3.10-linux}: rpy2<4
# log level ERROR because we print out info from fixture and -s also prints useless stuff from R
setenv =
    OMNIPATH_AUTOLOAD = false
    {3.9-linux}: _PYTEST_TOX_POSARGS=--test-server --log-cli-level=ERROR
passenv = TOXENV,CI,CODECOV_*,GITHUB_ACTIONS
usedevelop = true
commands =
    pytest --cov --cov-append --cov-config={toxinidir}/.coveragerc --ignore docs/ {posargs:-vv {env:_PYTEST_TOX_POSARGS:}}

[testenv:covclean]
description = Clean coverage files.
deps = coverage
skip_install = True
commands = coverage erase

[testenv:lint]
description = Perform linting.
deps = pre-commit>=2.7.1
skip_install = true
commands =
    pre-commit run --all-files --show-diff-on-failure {posargs:}

[testenv:coverage]
description = Report the coverage difference.
deps =
    coverage
    diff_cover
skip_install = true
depends = {3.9,3.10,3.11,3.12,3.13}-{linux,macos}
parallel_show_output = True
commands =
    coverage report --omit="tox/*"
    coverage xml --omit="tox/*" -o {toxinidir}/coverage.xml
    diff-cover --compare-branch origin/master {toxinidir}/coverage.xml

[testenv:docs]
description = Build the documentation.
skip_install = true
allowlist_externals = uv
commands =
    uv sync --extra docs
    uv run sphinx-build --color -b html {toxinidir}/docs/source {toxinidir}/docs/build/html
    python -c 'import pathlib; print(f"Documentation is available under:", pathlib.Path(f"{toxinidir}") / "docs" / "build" / "html" / "index.html")'

[testenv:clean-docs]
description = Clean the documentation artifacts.
deps =
skip_install = true
changedir = {toxinidir}/docs
allowlist_externals = make
commands = make clean

[testenv:readme]
description = Check if README renders on PyPI.
deps = twine >= 1.12.1
skip_install = true
allowlist_externals = uv
commands = uv build --wheel --out-dir {envtmpdir}/build
           twine check {envtmpdir}/build/*
